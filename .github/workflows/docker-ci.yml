name: Docker CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      working-directory: playwright-in-java-sample-code-sample-code-module-16-allure-reporting
      run: docker build -t playwright-tests .
      
    - name: Create directories
      run: |
        mkdir -p playwright-in-java-sample-code-sample-code-module-16-allure-reporting/target
        mkdir -p allure-results
        
    - name: Run tests in Docker
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/playwright-in-java-sample-code-sample-code-module-16-allure-reporting/target:/app/target \
          -v ${{ github.workspace }}/allure-results:/app/target/allure-results \
          playwright-tests
        
    - name: List created files
      run: |
        echo "Files in target directory:"
        ls -la playwright-in-java-sample-code-sample-code-module-16-allure-reporting/target/ || echo "Target directory not found"
        echo "Files in allure-results directory:"
        ls -la allure-results/ || echo "Allure-results directory not found"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-test-results
        path: |
          playwright-in-java-sample-code-sample-code-module-16-allure-reporting/target/
          allure-results/
        if-no-files-found: warn
          
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: playwright-in-java-sample-code-sample-code-module-16-allure-reporting/target/allure-results
        allure_history: allure-history
        gh_pages: gh-pages